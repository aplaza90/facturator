openapi: 3.1.0

info:
  title: Facturator API
  description: API that allows to manage the CRUD operations of resources in facturator
  version: 1.0.0

servers:
  - url: http://127.0.0.1:5005
    description: URL for local development and testing

paths:
  /payers/{id}:
    get:
      summary: Get the payer info by the ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A payer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayerItemResponse'
        '404':
          description: Payer not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
    patch:
      summary: Update a payer partially by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchPayer'
      responses:
        '200':
          description: Updated payer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayerItemResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Payer not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
    put:
      summary: Update a payer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPayer'
      responses:
        '200':
          description: Updated payer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayerItemResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Payer not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
    delete:
      summary: Delete a payer by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Payer deleted successfully
        '404':
          description: Payer not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
        '406':
          description: Integrity violation

  /payers:
    get:
      summary: Get list of payers
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: A list of payers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayerListResponse'

    post:
      summary: Create a new payer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPayer'
      responses:
        '201':
          description: Payer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayerItemResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string  
  
  /orders/{id}:
    get:
      summary: Get an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: An order object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItemResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

    patch:
      summary: Update an order partially by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchOrder'
      responses:
        '200':
          description: Updated order object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItemResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

    put:
      summary: Update an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostOrder'
      responses:
        '200':
          description: Updated order object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItemResponse'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string

    delete:
      summary: Delete an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Order deleted successfully
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
        '406':
          description: Integrity violation
          
components:
  responses:
    NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Error:
      type: object
      properties:
        error:
          type: string

    PatchPayer:
      type: object
      properties:
        name:
          type: string
          nullable: true
        nif:
          type: string
          nullable: true
        address:
          type: string
          nullable: true
        zip_code:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        province:
          type: string
          nullable: true
      additionalProperties: false      

    PostPayer:
      additionalProperties: false
      type: object
      required:
        - name
        - nif
        - address
        - zip_code
        - city
        - province
      properties:
        name:
          type: string
        nif:
          type: string
        address:
          type: string
        zip_code:
          type: string
        city:
          type: string
        province:
          type: string  

    PayerItemResponse:
      allOf:
        - $ref: '#/components/schemas/PostPayer'
        - type: object
          properties:
            id:
              type: string
              format: uuid 
          required:
            - id  

    PayerListResponse:
      type: object
      properties:
        payers:
          type: array
          items:
            $ref: '#/components/schemas/PayerItemResponse'
      required:
        - payers      

    PostOrder:
      type: object
      properties:
        number:
          type: string
        payer_name:
          type: string
        date:
          type: string
        quantity:
          type: number
          format: float
      required:
        - number
        - payer_name
        - date
        - quantity
      additionalProperties: false

    OrderItemResponse:
      allOf:
        - $ref: '#/components/schemas/PostOrder'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            payer_id:
              type: string
              format: uuid
              nullable: true
          required:
            - id

    OrderListResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderItemResponse'
      required:
        - orders

    PatchOrder:
      type: object
      properties:
        number:
          type: string
          nullable: true
        payer_name:
          type: string
          nullable: true
        date:
          type: string
          nullable: true
        quantity:
          type: number
          format: float
          nullable: true
      additionalProperties: false