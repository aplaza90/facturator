
type Payer {
  id: ID!
  name: String!
  nif: String
  address: String
  zip_code: String
  city: String
  province: String
}

input CreatePayerInput {
  name: String!
  nif: String
  address: String
  zip_code: String
  city: String
  province: String
}

input UpdatePayerInput {
  name: String
  nif: String
  address: String
  zip_code: String
  city: String
  province: String
}

type Order {
  id: ID!
  payer_name: String!
  date: String!
  quantity: Float!
  number: String
  payer: Payer
}

input CreateOrderInput {
  payer_name: String!
  date: String!
  quantity: Float!
  number: String
}

input UpdateOrderInput {
  payer_name: String
  date: String
  quantity: Float
  number: String
}


type Query {
  getPayer(id: ID!): Payer
  getPayers(name: String): [Payer!]!
  getOrder(id: ID!): Order
  getOrders(payer_name: String): [Order!]!
}

type Mutation {
  createPayer(input: CreatePayerInput!): Payer
  updatePayer(id: ID!, input: UpdatePayerInput!): Payer
  deletePayer(id: ID!): String
  createOrder(input: CreateOrderInput!): Order
  updateOrder(id: ID!, input: UpdateOrderInput!): Order
  deleteOrder(id: ID!): String
}
